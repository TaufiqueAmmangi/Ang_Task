{"ast":null,"code":"import _toConsumableArray from \"E:/Piu/article_ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { fromRef } from '../observable/fromRef';\nimport { Observable } from 'rxjs/Observable';\nimport { isNil } from '../utils';\nimport 'rxjs/add/operator/scan';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/distinctUntilChanged';\nexport function listChanges(ref, events) {\n  return fromRef(ref, 'value', 'once').switchMap(function (snapshotAction) {\n    var childEvent$ = [Observable.of(snapshotAction)];\n    events.forEach(function (event) {\n      return childEvent$.push(fromRef(ref, event));\n    });\n    return Observable.merge.apply(Observable, childEvent$).scan(buildView, []);\n  }).distinctUntilChanged();\n}\n\nfunction positionFor(changes, key) {\n  var len = changes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (changes[i].payload.key === key) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nfunction positionAfter(changes, prevKey) {\n  if (isNil(prevKey)) {\n    return 0;\n  } else {\n    var i = positionFor(changes, prevKey);\n\n    if (i === -1) {\n      return changes.length;\n    } else {\n      return i + 1;\n    }\n  }\n}\n\nfunction buildView(current, action) {\n  var payload = action.payload,\n      type = action.type,\n      prevKey = action.prevKey,\n      key = action.key;\n  var currentKeyPosition = positionFor(current, key);\n  var afterPreviousKeyPosition = positionAfter(current, prevKey);\n\n  switch (action.type) {\n    case 'value':\n      if (action.payload && action.payload.exists()) {\n        var _prevKey = null;\n        action.payload.forEach(function (payload) {\n          var action = {\n            payload: payload,\n            type: 'value',\n            prevKey: _prevKey,\n            key: payload.key\n          };\n          _prevKey = payload.key;\n          current = [].concat(_toConsumableArray(current), [action]);\n          return false;\n        });\n      }\n\n      return current;\n\n    case 'child_added':\n      if (currentKeyPosition > -1) {\n        var previous = current[currentKeyPosition - 1];\n\n        if ((previous && previous.key || null) != prevKey) {\n          current = current.filter(function (x) {\n            return x.payload.key !== payload.key;\n          });\n          current.splice(afterPreviousKeyPosition, 0, action);\n        }\n      } else if (prevKey == null) {\n        return [action].concat(_toConsumableArray(current));\n      } else {\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, action);\n      }\n\n      return current;\n\n    case 'child_removed':\n      return current.filter(function (x) {\n        return x.payload.key !== payload.key;\n      });\n\n    case 'child_changed':\n      return current.map(function (x) {\n        return x.payload.key === key ? action : x;\n      });\n\n    case 'child_moved':\n      if (currentKeyPosition > -1) {\n        var data = current.splice(currentKeyPosition, 1)[0];\n        current = current.slice();\n        current.splice(afterPreviousKeyPosition, 0, data);\n        return current;\n      }\n\n      return current;\n\n    default:\n      return current;\n  }\n}","map":{"version":3,"sources":["E:/Piu/article_ui/node_modules/angularfire2/__ivy_ngcc__/database/es2015/list/changes.js"],"names":["fromRef","Observable","isNil","listChanges","ref","events","switchMap","snapshotAction","childEvent$","of","forEach","event","push","merge","scan","buildView","distinctUntilChanged","positionFor","changes","key","len","length","i","payload","positionAfter","prevKey","current","action","type","currentKeyPosition","afterPreviousKeyPosition","exists","previous","filter","x","splice","slice","map","data"],"mappings":"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","sourcesContent":["import { fromRef } from '../observable/fromRef';\nimport { Observable } from 'rxjs/Observable';\nimport { isNil } from '../utils';\nimport 'rxjs/add/operator/scan';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/filter';\nimport 'rxjs/add/operator/delay';\nimport 'rxjs/add/operator/distinctUntilChanged';\nexport function listChanges(ref, events) {\n    return fromRef(ref, 'value', 'once').switchMap(snapshotAction => {\n        const childEvent$ = [Observable.of(snapshotAction)];\n        events.forEach(event => childEvent$.push(fromRef(ref, event)));\n        return Observable.merge(...childEvent$).scan(buildView, []);\n    })\n        .distinctUntilChanged();\n}\nfunction positionFor(changes, key) {\n    const len = changes.length;\n    for (let i = 0; i < len; i++) {\n        if (changes[i].payload.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (isNil(prevKey)) {\n        return 0;\n    }\n    else {\n        const i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, action) {\n    const { payload, type, prevKey, key } = action;\n    const currentKeyPosition = positionFor(current, key);\n    const afterPreviousKeyPosition = positionAfter(current, prevKey);\n    switch (action.type) {\n        case 'value':\n            if (action.payload && action.payload.exists()) {\n                let prevKey = null;\n                action.payload.forEach(payload => {\n                    const action = { payload, type: 'value', prevKey, key: payload.key };\n                    prevKey = payload.key;\n                    current = [...current, action];\n                    return false;\n                });\n            }\n            return current;\n        case 'child_added':\n            if (currentKeyPosition > -1) {\n                const previous = current[currentKeyPosition - 1];\n                if ((previous && previous.key || null) != prevKey) {\n                    current = current.filter(x => x.payload.key !== payload.key);\n                    current.splice(afterPreviousKeyPosition, 0, action);\n                }\n            }\n            else if (prevKey == null) {\n                return [action, ...current];\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, action);\n            }\n            return current;\n        case 'child_removed':\n            return current.filter(x => x.payload.key !== payload.key);\n        case 'child_changed':\n            return current.map(x => x.payload.key === key ? action : x);\n        case 'child_moved':\n            if (currentKeyPosition > -1) {\n                const data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        default:\n            return current;\n    }\n}\n//# sourceMappingURL=changes.js.map"]},"metadata":{},"sourceType":"module"}