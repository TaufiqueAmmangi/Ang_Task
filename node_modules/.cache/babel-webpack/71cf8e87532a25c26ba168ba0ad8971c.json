{"ast":null,"code":"import _classCallCheck from \"E:/Piu/article_ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/Piu/article_ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { FirebaseAppConfigToken, FirebaseApp, _firebaseAppFactory } from './firebase.app.module';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { queue } from 'rxjs/scheduler/queue';\nimport * as ɵngcc0 from '@angular/core';\nvar FirebaseAppName = new InjectionToken('FirebaseAppName');\nexport var FirebaseAppProvider = {\n  provide: FirebaseApp,\n  useFactory: _firebaseAppFactory,\n  deps: [FirebaseAppConfigToken, FirebaseAppName]\n};\nexport var AngularFireModule = /*#__PURE__*/function () {\n  function AngularFireModule() {\n    _classCallCheck(this, AngularFireModule);\n  }\n\n  _createClass(AngularFireModule, null, [{\n    key: \"initializeApp\",\n    value: function initializeApp(config, appName) {\n      return {\n        ngModule: AngularFireModule,\n        providers: [{\n          provide: FirebaseAppConfigToken,\n          useValue: config\n        }, {\n          provide: FirebaseAppName,\n          useValue: appName\n        }]\n      };\n    }\n  }]);\n\n  return AngularFireModule;\n}();\nAngularFireModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: AngularFireModule\n});\nAngularFireModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function AngularFireModule_Factory(t) {\n    return new (t || AngularFireModule)();\n  },\n  providers: [FirebaseAppProvider]\n});\n\nAngularFireModule.ctorParameters = function () {\n  return [];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AngularFireModule, [{\n    type: NgModule,\n    args: [{\n      providers: [FirebaseAppProvider]\n    }]\n  }], null, null);\n})();\n\nexport var ZoneScheduler = /*#__PURE__*/function () {\n  function ZoneScheduler(zone) {\n    _classCallCheck(this, ZoneScheduler);\n\n    this.zone = zone;\n  }\n\n  _createClass(ZoneScheduler, [{\n    key: \"schedule\",\n    value: function schedule() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.zone.run(function () {\n        return queue.schedule.apply(queue, args);\n      });\n    }\n  }]);\n\n  return ZoneScheduler;\n}();\nexport { FirebaseApp, FirebaseAppName, FirebaseAppConfigToken };","map":{"version":3,"sources":["../../../src/core/angularfire2.ts"],"names":[],"mappings":";;AACA,SAAS,sBAAT,EAAiC,WAAjC,EAA8C,mBAA9C,QAAyE,uBAAzE;AACA,SAAqB,cAArB,EAAqC,QAArC,QAAqD,eAArD;AAGA,SAAS,KAAT,QAAsB,sBAAtB;;AAWA,IAAM,eAAe,GAAG,IAAI,cAAJ,CAA2B,iBAA3B,CAAxB;AAEA,OAAO,IAAM,mBAAmB,GAAG;AACjC,EAAA,OAAO,EAAE,WADwB;AAEjC,EAAA,UAAU,EAAE,mBAFqB;AAGjC,EAAA,IAAI,EAAE,CAAE,sBAAF,EAA0B,eAA1B;AAH2B,CAA5B;AASP,WAAM,iBAAN;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,kCACuB,MADvB,EACkD,OADlD,EACkE;AAC9D,aAAO;AACL,QAAA,QAAQ,EAAE,iBADL;AAEL,QAAA,SAAS,EAAE,CACT;AAAE,UAAA,OAAO,EAAE,sBAAX;AAAmC,UAAA,QAAQ,EAAE;AAA7C,SADS,EAET;AAAE,UAAA,OAAO,EAAE,eAAX;AAA4B,UAAA,QAAQ,EAAE;AAAtC,SAFS;AAFN,OAAP;AAOD;AATH;;AAAA;AAAA;gCAHC,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACC,iBAAa,CAAA,IAAb,GAAa,MAAA,CAAmB,gBAAnB,CACd;AAAA,EAAA,OAAA,EAAA,SAAA,yBAAA,CAAA,CAAA,EAAA;AAAA,WAAA,KAAA,CAAA,IAAA,iBAAA,GAAA;AAAA,GAAA;AAAA,EAAA,SAAA,EAAA,CAAA,mBAAA;AAAA,CADc,CAAb;;AAEK,iBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,EAAA;AAAA,CAAA;;;;;;;;;;;AACW,C;;AAelB,WAAM,aAAN;AAGE,yBAAmB,IAAnB,EAA4B;AAAA;;AAAT,SAAA,IAAA,GAAA,IAAA;AAAa;;AAHlC;AAAA;AAAA,+BAKyB;AAAA,wCAAX,IAAW;AAAX,QAAA,IAAW;AAAA;;AACrB,aAAqB,KAAK,IAAL,CAAU,GAAV,CAAc;AAAA,eAAM,KAAK,CAAC,QAAN,CAAe,KAAf,CAAqB,KAArB,EAA4B,IAA5B,CAAN;AAAA,OAAd,CAArB;AACD;AAPH;;AAAA;AAAA;AAUA,SAAS,WAAT,EAAsB,eAAtB,EAAuC,sBAAvC","sourcesContent":["import * as firebase from 'firebase/app';\nimport { FirebaseAppConfigToken, FirebaseApp, _firebaseAppFactory } from './firebase.app.module';\nimport { Injectable, InjectionToken, NgModule } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Scheduler } from 'rxjs/Scheduler';\nimport { queue } from 'rxjs/scheduler/queue';\n\nexport interface FirebaseAppConfig {\n  apiKey?: string;\n  authDomain?: string;\n  databaseURL?: string;\n  storageBucket?: string;\n  messagingSenderId?: string;\n  projectId?: string;\n}\n\nconst FirebaseAppName = new InjectionToken<string>('FirebaseAppName');\n\nexport const FirebaseAppProvider = {\n  provide: FirebaseApp,\n  useFactory: _firebaseAppFactory,\n  deps: [ FirebaseAppConfigToken, FirebaseAppName ]\n};\n\n@NgModule({\n  providers: [ FirebaseAppProvider ],\n})\nexport class AngularFireModule {\n  static initializeApp(config: FirebaseAppConfig, appName?: string) {\n    return {\n      ngModule: AngularFireModule,\n      providers: [\n        { provide: FirebaseAppConfigToken, useValue: config },\n        { provide: FirebaseAppName, useValue: appName }\n      ]\n    }\n  }\n}\n\n/**\n * TODO: remove this scheduler once Rx has a more robust story for working\n * with zones.\n */\nexport class ZoneScheduler {\n\n  // TODO: Correctly add ambient zone typings instead of using any.\n  constructor(public zone: any) {}\n\n  schedule(...args: any[]): Subscription {\n    return <Subscription>this.zone.run(() => queue.schedule.apply(queue, args));\n  }\n}\n\nexport { FirebaseApp, FirebaseAppName, FirebaseAppConfigToken };\n"]},"metadata":{},"sourceType":"module"}