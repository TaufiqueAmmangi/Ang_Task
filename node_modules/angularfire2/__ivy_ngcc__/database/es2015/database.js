import { Injectable } from '@angular/core';
import 'firebase/database';
import { FirebaseApp } from 'angularfire2';
import { getRef } from './utils';
import { createListReference } from './list/create-reference';
import { createObjectReference } from './object/create-reference';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'angularfire2';
export class AngularFireDatabase {
    constructor(app) {
        this.app = app;
        this.database = app.database();
    }
    list(pathOrRef, queryFn) {
        const ref = getRef(this.app, pathOrRef);
        let query = ref;
        if (queryFn) {
            query = queryFn(ref);
        }
        return createListReference(query);
    }
    object(pathOrRef) {
        const ref = getRef(this.app, pathOrRef);
        return createObjectReference(ref);
    }
    createPushId() {
        return this.database.ref().push().key;
    }
}
AngularFireDatabase.ɵfac = function AngularFireDatabase_Factory(t) { return new (t || AngularFireDatabase)(ɵngcc0.ɵɵinject(ɵngcc1.FirebaseApp)); };
AngularFireDatabase.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: AngularFireDatabase, factory: AngularFireDatabase.ɵfac });
AngularFireDatabase.ctorParameters = () => [
    { type: FirebaseApp, },
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AngularFireDatabase, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.FirebaseApp }]; }, null); })();

//# sourceMappingURL=database.js.map