{"version":3,"sources":["../../../../packages/firebase-rxjs/src/zone-helper.ts"],"names":[],"mappings":"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","file":"zone-helper.js","sourceRoot":"","sourcesContent":["import { Observable } from 'rxjs/Observable'\nimport { fromPromise } from 'rxjs/observable/fromPromise'\nimport { Operator } from 'rxjs/Operator'\nimport { Subscriber } from 'rxjs/Subscriber'\nimport { TeardownLogic } from 'rxjs/Subscription'\n\nexport class ZoneHelper {\n\n  constructor(private firebaseZone?: Zone) {\n    if (!firebaseZone) {\n      if (typeof Zone !== 'undefined') {\n        this.firebaseZone = Zone.root.fork({ name: 'firebase' })\n      }\n    }\n  }\n\n  wrap<F extends Function>(callback: F, source: string): F {\n    if (this.firebaseZone) {\n      return this.firebaseZone.wrap(callback, source)\n    }\n    return callback\n  }\n\n  runInFirebase<T>(fn: () => T): T {\n    if (this.firebaseZone) {\n      return this.firebaseZone.run<T>(fn)\n    }\n    return fn()\n  }\n\n  wrapSubscribe<T extends Function>(fn: T): T {\n    if (this.firebaseZone) {\n      return this.firebaseZone.wrap(fn, 'firebaseRxJS.Observable.subscribe')\n    }\n    return fn\n  }\n\n  wrapPromise<T>(promiseFactory: () => firebase.Promise<T>): Observable<T> {\n    if (typeof Zone === 'undefined') {\n      return fromPromise(this.runInFirebase(promiseFactory) as Promise<T>)\n    }\n\n    return new Observable(subscriber => {\n      Zone.current.scheduleMacroTask('firebaseRxJS.Promise',\n        (err: any, res: any) => {\n          if (err) {\n            subscriber.error(err)\n          } else {\n            subscriber.next(res)\n            subscriber.complete()\n          }\n        }, {},\n        (task: Task) => {\n          const promise = this.runInFirebase(promiseFactory) as Promise<T>\n          promise.then(task.invoke.bind(task, null), task.invoke.bind(task))\n        },\n        (task: Task) => {}\n      )\n    })\n  }\n\n  createObservable<T>(subscribe: (subscriber: Subscriber<T>) => TeardownLogic): Observable<T> {\n    const obs = new Observable(this.wrapSubscribe(subscribe))\n\n    if (typeof Zone === 'undefined') {\n      return obs\n    }\n\n    return obs.lift(new EventTaskOperator())\n  }\n}\n\nclass EventTaskOperator<T> implements Operator<T, T> {\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new EventTaskSubscriber(subscriber, Zone.current))\n  }\n}\n\nclass EventTaskSubscriber<T> extends Subscriber<T> {\n  nextTask: EventTask\n\n  constructor(destination: Subscriber<T>, private zone: Zone) {\n    super(destination)\n\n    this.nextTask = this.zone.scheduleEventTask(\n      'firebaseRxJS.Observable.next',\n      (val: T) => this.destination.next!(val),\n      {},\n      () => {},\n      () => {},\n    )\n\n    this.add(() => this.zone.cancelTask(this.nextTask))\n  }\n\n  protected _next(value: T): void {\n    const { nextTask } = this\n    this.zone.run(nextTask.invoke, nextTask, [value]);\n  }\n\n  protected _error(err: any): void {\n    const { destination } = this\n    this.zone.scheduleMicroTask('firebaseRxJS.Observable.error',\n      destination.error!.bind(destination, err))\n  }\n\n  protected _complete(): void {\n    const { destination } = this\n    this.zone.scheduleMicroTask('firebaseRxJS.Observable.complete',\n      destination.complete!.bind(destination))\n  }\n}\n"]}