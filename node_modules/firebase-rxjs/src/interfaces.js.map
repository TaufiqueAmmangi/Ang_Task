{"version":3,"sources":["../../../../packages/firebase-rxjs/src/interfaces.ts"],"names":[],"mappings":";;;;;;;;;;AAKA,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAA;AAsP/B;IAAwC,sCAAuB;IAA/D;;IAAiE,CAAC;IAAD,yBAAC;AAAD,CAAjE,AAAkE,CAA1B,IAAI,CAAC,kBAAkB,GAAG;;AAClE;IAA0C,wCAAyB;IAAnE;;IAAqE,CAAC;IAAD,2BAAC;AAAD,CAArE,AAAsE,CAA5B,IAAI,CAAC,oBAAoB,GAAG;;AACtE;IAAwC,sCAAuB;IAA/D;;IAAiE,CAAC;IAAD,yBAAC;AAAD,CAAjE,AAAkE,CAA1B,IAAI,CAAC,kBAAkB,GAAG;;AAClE;IAAuC,qCAAsB;IAA7D;;IAA+D,CAAC;IAAD,wBAAC;AAAD,CAA/D,AAAgE,CAAzB,IAAI,CAAC,iBAAiB,GAAG;;AAChE;IAAyC,uCAAwB;IAAjE;;IAAmE,CAAC;IAAD,0BAAC;AAAD,CAAnE,AAAoE,CAA3B,IAAI,CAAC,mBAAmB,GAAG","file":"interfaces.js","sourceRoot":"","sourcesContent":["import * as firebase from 'firebase'\nimport { database } from 'firebase'\nimport { FirebaseDatabaseRef } from './database'\nimport { FirebaseError } from './native-firebase'\nimport AuthCredential = firebase.auth.AuthCredential\nimport { auth } from 'firebase'\n\n/*\n * App Interfaces\n */\n\nexport interface FirebaseAppConfig {\n  /**\n   * Name of the app internally used by firebase. If non is given one will be generated.\n   */\n  name?: string\n  /**\n   * Firebase App configuration.\n   */\n  options: {\n    apiKey: string\n    authDomain?: string\n    databaseURL?: string\n    storageBucket?: string\n    messagingSenderId?: string\n  }\n}\n\nexport interface Extras {\n  firebaseZone?: any\n}\n\n/*\n * Database Interfaces\n */\n\nexport type Priority = number | string | null\n\nexport interface PriorityField {\n  '.priority'?: Priority // TODO define Priority type\n}\n\nexport type ExportedSnapshot<T> = {\n  [P in keyof T]: ExportedSnapshot<T[P]>\n  } & PriorityField\n\n// Implements firebase.database.DataSnapshot but with some changes which TypeScript can't express.\nexport interface DataSnapshot<T> {\n  child<P extends keyof T>(path: P): DataSnapshot<T[P]>;\n  exists(): boolean;\n  exportVal(): ExportedSnapshot<T>;\n  forEach(action: (a: DataSnapshot<T[keyof T]>) => boolean): boolean;\n  getPriority(): Priority;\n  hasChild(path: keyof T): boolean;\n  hasChildren(): boolean;\n  key: string | null;\n  numChildren(): number;\n  ref: FirebaseDatabaseRef<T>;\n  toJSON(): T | null;\n  val(): T | null;\n\n  prevKey?: string;\n}\n\nexport type NativeDatabaseRef = database.Reference\nexport type Query = database.Query\n\n/**\n * Events which can be listened for.\n */\nexport type EventType =\n  'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_removed'\n  | 'child_moved'\n\nexport interface TransactionResult<T> {\n  committed: boolean,\n  snapshot: DataSnapshot<T> | null\n}\n\n/*\n *  Auth Interfaces\n */\n\n/**\n * General error codes which may occur with every operation.\n */\nexport type AuthErrorCodeType =\n  'auth/app-deleted'\n  | 'auth/app-not-authorized'\n  | 'auth/argument-error'\n  | 'auth/invalid-api-key'\n  | 'auth/invalid-user-token'\n  | 'auth/network-request-failed'\n  | 'auth/operation-not-allowed'\n  | 'auth/requires-recent-login'\n  | 'auth/too-many-requests'\n  | 'auth/unauthorized-domain'\n  | 'auth/user-disabled'\n  | 'auth/user-token-expired'\n  | 'auth/web-storage-unsupported'\n\nexport interface AuthError extends FirebaseError {\n  code: AuthErrorCodeType | string\n  email?: string\n  credential?: AuthCredential\n}\n\nexport interface ActionCodeError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/expired-action-code'\n    | 'auth/invalid-action-code'\n    | 'auth/user-disabled'\n    | 'auth/user-not-found'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.confirmPasswordReset}\n */\nexport interface ConfirmPasswordResetError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/expired-action-code'\n    | 'auth/invalid-action-code'\n    | 'auth/user-disabled'\n    | 'auth/user-not-found'\n    | 'auth/weak-password'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.createUserWithEmailAndPassword}\n */\nexport interface CreateUserWithEmailAndPasswordError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/email-already-in-use'\n    | 'auth/invalid-email'\n    | 'auth/operation-not-allowed'\n    | 'auth/weak-password'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.fetchProvidersForEmail}\n */\nexport interface FetchProvidersForEmailError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/invalid-email'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.getRedirectResult}\n */\nexport interface GetRedirectResultError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/invalid-email'\n    | 'auth/user-not-found'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.sendPasswordResetEmail}\n */\nexport interface SendPasswordResetEmailError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/invalid-email'\n    | 'auth/user-not-found'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.signInAnonymously}\n */\nexport interface SignInAnonymouslyError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/operation-not-allowed'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.signInWithCredential}\n */\nexport interface SignInWithCredentialError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/account-exists-with-different-credential'\n    | 'auth/invalid-credential'\n    | 'auth/operation-not-allowed'\n    | 'auth/user-disabled'\n    | 'auth/user-not-found'\n    | 'auth/wrong-password'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.signInWithCustomToken}\n */\nexport interface SignInWithCustomTokenError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/custom-token-mismatch'\n    | 'auth/invalid-custom-token'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.signInWithEmailAndPassword}\n */\nexport interface SignInWithEmailAndPasswordError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/invalid-email'\n    | 'auth/user-disabled'\n    | 'auth/user-not-found'\n    | 'auth/wrong-password'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.signInWithPopup}\n */\nexport interface SignInWithPopupError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/account-exists-with-different-credential'\n    | 'auth/auth-domain-config-required'\n    | 'auth/cancelled-popup-request'\n    | 'auth/operation-not-allowed'\n    | 'auth/operation-not-supported-in-this-environment'\n    | 'auth/popup-blocked'\n    | 'auth/popup-closed-by-user'\n    | 'auth/unauthorized-domain'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.signInWithRedirect}\n */\nexport interface SignInWithRedirectError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/auth-domain-config-required'\n    | 'auth/operation-not-supported-in-this-environment'\n    | 'auth/unauthorized-domain'\n}\n\n/**\n * Error codes which can occur when calling {@link FirebaseAuth.verifyPasswordResetCode}\n */\nexport interface VerifyPasswordResetCodeError extends AuthError {\n  code: AuthErrorCodeType\n    | 'auth/expired-action-code'\n    | 'auth/invalid-action-code'\n    | 'auth/user-disabled'\n    | 'auth/user-not-found'\n}\n\nexport interface ActionCodeInfo {\n  email: string\n}\n\nexport type AuthProvider = auth.AuthProvider\nexport type AuthCredential = auth.AuthCredential\n\nexport class GoogleAuthProvider extends auth.GoogleAuthProvider {}\nexport class FacebookAuthProvider extends auth.FacebookAuthProvider {}\nexport class GithubAuthProvider extends auth.GithubAuthProvider {}\nexport class EmailAuthProvider extends auth.EmailAuthProvider {}\nexport class TwitterAuthProvider extends auth.TwitterAuthProvider {}\n\n/*\n * User Interfaces\n */\nexport interface DeleteUserError extends FirebaseError {\n  code: AuthErrorCodeType\n    | 'auth/requires-recent-login'\n}\n\nexport interface LinkUserError extends FirebaseError {\n  code: AuthErrorCodeType\n    | 'auth/provider-already-linked'\n    | 'auth/invalid-credential'\n    | 'auth/credential-already-in-use'\n    | 'auth/email-already-in-use'\n    | 'auth/operation-not-allowed'\n    | 'auth/invalid-email'\n    | 'auth/wrong-password'\n}\n\nexport interface LinkUserWithPopupError extends FirebaseError {\n  code: AuthErrorCodeType\n    | 'auth/auth-domain-config-required'\n    | 'auth/cancelled-popup-request'\n    | 'auth/credential-already-in-use'\n    | 'auth/email-already-in-use'\n    | 'auth/operation-not-allowed'\n    | 'auth/popup-blocked'\n    | 'auth/operation-not-supported-in-this-environment'\n    | 'auth/popup-closed-by-user'\n    | 'auth/provider-already-linked'\n    | 'auth/unauthorized-domain'\n}\n\nexport interface LinkUserWithRedirectError extends FirebaseError {\n  code: AuthErrorCodeType\n    | 'auth/auth-domain-config-required'\n    | 'auth/operation-not-supported-in-this-environment'\n    | 'auth/provider-already-linked'\n    | 'auth/unauthorized-domain'\n}\n\nexport interface ReauthenticateError extends FirebaseError {\n  code: AuthErrorCodeType\n    | 'auth/user-mismatch'\n    | 'auth/user-not-found'\n    | 'auth/invalid-credential'\n    | 'auth/invalid-email'\n    | 'auth/wrong-password'\n}\n\nexport interface UpdateEmailError extends FirebaseError {\n  code: AuthErrorCodeType\n    | 'auth/invalid-email'\n    | 'auth/email-already-in-use'\n    | 'auth/requires-recent-login'\n}\n\nexport interface UpdatePasswordError extends FirebaseError {\n  code: AuthErrorCodeType\n    | 'auth/weak-password'\n    | 'auth/requires-recent-login'\n}\n\nexport type UserCredential = auth.UserCredential;\n"]}