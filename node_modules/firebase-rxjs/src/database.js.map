{"version":3,"sources":["../../../../packages/firebase-rxjs/src/database.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,UAAU,CAAA;AAEnC,OAAO,EAAE,EAAE,EAAE,MAAM,oBAAoB,CAAA;AACvC,OAAO,EAAE,GAAG,EAAE,MAAM,mBAAmB,CAAA;AACvC,OAAO,EAAE,KAAK,EAAE,MAAM,qBAAqB,CAAA;AAG3C,OAAO,EAA0B,0BAA0B,EAAE,MAAM,4BAA4B,CAAA;AAW/F;;GAEG;AACH;IAAA;IAMA,CAAC;IAAD,YAAC;AAAD,CANA,AAMC;;AALQ,WAAK,GAAqB,OAAO,CAAA;AACjC,gBAAU,GAAgB,aAAa,CAAA;AACvC,kBAAY,GAAc,eAAe,CAAA;AACzC,kBAAY,GAAc,eAAe,CAAA;AACzC,gBAAU,GAAgB,aAAa,CAAA;AAGhD;IAQE,uBAAsB,IAAuB,EAAY,GAAgB;QAAnD,SAAI,GAAJ,IAAI,CAAmB;QAAY,QAAG,GAAH,GAAG,CAAa;IAAG,CAAC;IAJ7E,sBAAI,8BAAG;aAAP;YACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAA;QACxB,CAAC;;;OAAA;IAID,oCAAY,GAAZ,UAAa,KAAuB;QAClC,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAA;QACjC,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAED,kCAAU,GAAV;QACE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;QACxB,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAED,uCAAe,GAAf;QACE,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAA;QAC7B,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAED,oCAAY,GAAZ;QACE,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAA;QAC1B,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAED,+BAAO,GAAP,UAAQ,KAAuC,EAAE,GAAsB;QACrE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QACjC,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAED,6BAAK,GAAL,UAAM,KAAuC,EAAE,GAAsB;QACnE,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QAC/B,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAED,+BAAO,GAAP,UAAQ,KAAuC,EAAE,GAAsB;QACrE,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;QACjC,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAED,oCAAY,GAAZ,UAAa,KAAa;QACxB,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAA;QACjC,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAED,mCAAW,GAAX,UAAY,KAAa;QACvB,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,CAAA;QAChC,MAAM,CAAC,IAAI,CAAA;IACb,CAAC;IAOD,4BAAI,GAAJ,UAAK,KAAgB;QACnB,MAAM,CAAC,0BAA0B,CAAiB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;IACtE,CAAC;IAED,iCAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;IAC3B,CAAC;IAED,sCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IACjC,CAAC;IAED,wCAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;IACnC,CAAC;IAED,sCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;IACjC,CAAC;IAED,wCAAgB,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;IACnC,CAAC;IAOD,0BAAE,GAAF,UAAG,KAAgB;QACjB,MAAM,CAAC,0BAA0B,CAAiB,IAAI,CAAC,GAAG,CAAC,KAAY,CAAC,CAAC,CAAA;IAC3E,CAAC;IAED,+BAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,CAAA;IACzB,CAAC;IAED,oCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAA;IAC/B,CAAC;IAED,sCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,CAAA;IACjC,CAAC;IAED,oCAAY,GAAZ;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAA;IAC/B,CAAC;IAED,sCAAc,GAAd;QACE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,eAAe,CAAC,CAAA;IACjC,CAAC;IAED,+BAAO,GAAP,UAAQ,KAAyB;QAC/B,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAA;IAC5D,CAAC;IAEO,6BAAK,GAAb,UAAc,KAAa;QAA3B,iBAKC;QAJC,MAAM,CAAC,GAAG,CAAC,IAAI,CACb,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAC,cAAM,OAAA,KAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAhC,CAAgC,CAAC,EACvE,UAAC,cAAmB,IAAK,OAAA,KAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAArC,CAAqC,CAC/D,CAAA;IACH,CAAC;IAEO,2BAAG,GAAX,UAAY,KAAa;QAAzB,iBASC;QARC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,UAAA,GAAG;YAC7C,IAAM,EAAE,GAAG,KAAI,CAAC,aAAa,EAAE,CAAC,EAAE,CAChC,KAAK,EAAE,KAAI,CAAC,eAAe,CAAC,GAAG,CAAC,EAChC,UAAC,GAAQ,IAAK,OAAA,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAd,CAAc,CAC7B,CAAA;YAED,MAAM,CAAC,cAAM,OAAA,KAAI,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,EAAnC,CAAmC,CAAA;QAClD,CAAC,CAAC,CAAA;IACJ,CAAC;IAES,wCAAgB,GAA1B,UAA2B,QAAa,EAAE,OAAgB;QAA1D,iBAQC;QAPC,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC;YACnC,QAAQ,CAAC,OAAO,GAAG,OAAO,CAAA;QAC5B,CAAC;QACD,MAAM,CAAC,cAAc,CAAC,QAAQ,EAAE,KAAK,EAAE;YACrC,GAAG,EAAE,cAAM,OAAA,KAAI,EAAJ,CAAI;SAChB,CAAC,CAAA;QACF,MAAM,CAAC,QAAQ,CAAA;IACjB,CAAC;IAEO,uCAAe,GAAvB,UAAwB,GAAoB,EAAE,QAAkB;QAAhE,iBAOC;QANC,MAAM,CAAC,UAAC,QAAa,EAAE,OAAY;YACjC,GAAG,CAAC,IAAI,CAAC,KAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAA;YAClD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,GAAG,CAAC,QAAQ,EAAE,CAAA;YAChB,CAAC;QACH,CAAC,CAAA;IACH,CAAC;IAEO,qCAAa,GAArB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAA;QACnB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAA;IAClB,CAAC;IAEO,6BAAK,GAAb,UAAc,MAAc;QAA5B,iBASC;QAT6B,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,6BAAc;;QAC1C,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC;YAChC,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,KAAK,GAAG,CAAA,KAAC,KAAI,CAAC,KAAa,CAAA,CAAC,MAAM,CAAC,WAAI,IAAI,CAAC,CAAA;YACnD,CAAC;YACD,IAAI,CAAC,CAAC;gBACJ,KAAI,CAAC,KAAK,GAAG,CAAA,KAAC,KAAI,CAAC,IAAY,CAAA,CAAC,MAAM,CAAC,WAAI,IAAI,CAAC,CAAA;YAClD,CAAC;;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;IACH,oBAAC;AAAD,CA3KA,AA2KC,IAAA;;AAED;IAA4C,uCAAgB;IAM1D,6BAAmB,MAAuC,EAC9C,GAAsB,EACtB,GAAgB;QAF5B,YAGE,kBAAM,GAAG,EAAE,GAAG,CAAC,SAGhB;QANkB,YAAM,GAAN,MAAM,CAAiC;QAKxD,KAAI,CAAC,UAAU,GAAG,KAAI,CAAA;;IACxB,CAAC;IAVD,sBAAI,oCAAG;aAAP;YACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAA;QACtB,CAAC;;;OAAA;IAUD,mCAAK,GAAL,UAAyB,IAAO;QAC9B,MAAM,CAAC,IAAI,mBAAmB,CAAO,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;IAC7E,CAAC;IAED,iCAAG,GAAH,UAAI,KAAQ;QAAZ,iBAEC;QADC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAO,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAA;IAC1E,CAAC;IAED,yCAAW,GAAX,UAAY,QAAkB;QAA9B,iBAKC;QAJC,0FAA0F;QAC1F,+FAA+F;QAC/F,+BAA+B;QAC/B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAO,cAAM,OAAC,KAAI,CAAC,IAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAxC,CAAwC,CAAC,CAAA;IAC9F,CAAC;IAED,6CAAe,GAAf,UAAgB,MAAS,EAAE,QAAkB;QAA7C,iBAEC;QADC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAO,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,CAAC,EAA3C,CAA2C,CAAC,CAAA;IACjG,CAAC;IAED,kCAAI,GAAJ,UAA2B,KAAS;QAClC,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACrC,IAAM,GAAG,GAAO,IAAI,mBAAmB,CAAI,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;QAEnE,yEAAyE;QACzE,iCAAiC;QACjC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACV,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAyB,cAAM,OAAA,OAAO,EAAP,CAAO,CAAC,EAAE,GAAG,CAAC,CAAA;QAChG,CAAC;QACD,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;IAChB,CAAC;IAED,oCAAM,GAAN,UAAO,KAAQ;QAAf,iBAEC;QADC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAO,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAvB,CAAuB,CAAC,CAAA;IAC7E,CAAC;IAED,oCAAM,GAAN;QAAA,iBAEC;QADC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CAAO,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAlB,CAAkB,CAAC,CAAA;IACxE,CAAC;IAED,yCAAW,GAAX,UAAY,kBAAwD,EACxD,YAAsB;QADlC,iBAiBC;QAfC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACT,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,EAAE,0BAA0B,CAAC,CAAA;QAC/F,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,WAAW,CACpC,cAAM,OAAA,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,WAAW,CAC1D,kBAAkB,EAClB,UAAC,GAAG,EAAE,SAAS,EAAE,QAAa;YAC5B,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;gBACjC,SAAS,WAAA;gBACT,QAAQ,EAAE,KAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;aAC1C,CAAC,CAAA;QACJ,CAAC,EACD,YAAY,CACb,EATsC,CAStC,CAAC,EATI,CASJ,CACH,CAAA;IACH,CAAC;IACH,0BAAC;AAAD,CAvEA,AAuEC,CAvE2C,aAAa,GAuExD;;AAED;;;GAGG;AACH;IAAA;IASA,CAAC;IAAD,iBAAC;AAAD,CATA,AASC,IAAA;;AAED;IAUE,0BAAoB,EAA0B,EAAU,GAAgB;QAApD,OAAE,GAAF,EAAE,CAAwB;QAAU,QAAG,GAAH,GAAG,CAAa;IAAI,CAAC;IAkB7E,8BAAG,GAAH,UAAO,IAAa;QAClB,MAAM,CAAC,IAAI,mBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;IACnE,CAAC;IACH,uBAAC;AAAD,CA/BA,AA+BC;;AA7BC;;;;;GAKG;AACI,4BAAW,GAAG,QAAQ,CAAC,WAAW,CAAA","file":"database.js","sourceRoot":"","sourcesContent":["import { database } from 'firebase'\nimport { Observable } from 'rxjs/Observable'\nimport { of } from 'rxjs/observable/of'\nimport { map } from 'rxjs/operator/map'\nimport { mapTo } from 'rxjs/operator/mapTo'\nimport { Subscriber } from 'rxjs/Subscriber'\nimport { FirebaseApp } from './app'\nimport { DataSnapshotObservable, makeDataSnapshotObservable } from './data-snapshot-observable'\nimport {\n  DataSnapshot,\n  EventType,\n  NativeDatabaseRef,\n  Priority,\n  Query,\n  TransactionResult\n} from './interfaces'\nimport { NativeFirebaseDatabase } from './native-firebase'\n\n/**\n * Enum of event types.\n */\nexport class Event {\n  static Value: EventType        = 'value'\n  static ChildAdded: EventType   = 'child_added'\n  static ChildChanged: EventType = 'child_changed'\n  static ChildRemoved: EventType = 'child_removed'\n  static ChildMoved: EventType   = 'child_moved'\n}\n\nexport class FirebaseQuery<T> {\n  private query: Query\n  protected wrappedRef: FirebaseDatabaseRef<T>\n\n  get ref(): FirebaseDatabaseRef<T> {\n    return this.wrappedRef\n  }\n\n  constructor(protected _ref: NativeDatabaseRef, protected app: FirebaseApp) {}\n\n  orderByChild(child: keyof T[keyof T]): FirebaseQuery<T> {\n    this._call('orderByChild', child)\n    return this\n  }\n\n  orderByKey(): FirebaseQuery<T> {\n    this._call('orderByKey')\n    return this\n  }\n\n  orderByPriority(): FirebaseQuery<T> {\n    this._call('orderByPriority')\n    return this\n  }\n\n  orderByValue(): FirebaseQuery<T> {\n    this._call('orderByValue')\n    return this\n  }\n\n  startAt(value: number | string | boolean | null, key?: keyof T[keyof T]): FirebaseQuery<T> {\n    this._call('startAt', value, key)\n    return this\n  }\n\n  endAt(value: number | string | boolean | null, key?: keyof T[keyof T]): FirebaseQuery<T> {\n    this._call('endAt', value, key)\n    return this\n  }\n\n  equalTo(value: number | string | boolean | null, key?: keyof T[keyof T]): FirebaseQuery<T> {\n    this._call('equalTo', value, key)\n    return this\n  }\n\n  limitToFirst(limit: number): FirebaseQuery<T> {\n    this._call('limitToFirst', limit)\n    return this\n  }\n\n  limitToLast(limit: number): FirebaseQuery<T> {\n    this._call('limitToLast', limit)\n    return this\n  }\n\n  once(event: 'value'): DataSnapshotObservable<T>\n  once(event: 'child_added'): DataSnapshotObservable<T[keyof T]>\n  once(event: 'child_changed'): DataSnapshotObservable<T[keyof T]>\n  once(event: 'child_moved'): DataSnapshotObservable<T[keyof T]>\n  once(event: 'child_removed'): DataSnapshotObservable<T[keyof T]>\n  once(event: EventType): DataSnapshotObservable<T | T[keyof T]> {\n    return makeDataSnapshotObservable<T | T[keyof T]>(this._once(event))\n  }\n\n  onceValue(): DataSnapshotObservable<T> {\n    return this.once('value')\n  }\n\n  onceChildAdded(): DataSnapshotObservable<T[keyof T]> {\n    return this.once('child_added')\n  }\n\n  onceChildChanged(): DataSnapshotObservable<T[keyof T]> {\n    return this.once('child_changed')\n  }\n\n  onceChildMoved(): DataSnapshotObservable<T[keyof T]> {\n    return this.once('child_moved')\n  }\n\n  onceChildRemoved(): DataSnapshotObservable<T[keyof T]> {\n    return this.once('child_removed')\n  }\n\n  on(event: 'value'): DataSnapshotObservable<T>\n  on(event: 'child_added'): DataSnapshotObservable<T[keyof T]>\n  on(event: 'child_changed'): DataSnapshotObservable<T[keyof T]>\n  on(event: 'child_moved'): DataSnapshotObservable<T[keyof T]>\n  on(event: 'child_removed'): DataSnapshotObservable<T[keyof T]>\n  on(event: EventType): DataSnapshotObservable<T | T[keyof T]> {\n    return makeDataSnapshotObservable<T | T[keyof T]>(this._on(event as any))\n  }\n\n  onValue(): DataSnapshotObservable<T> {\n    return this.on('value')\n  }\n\n  onChildAdded(): DataSnapshotObservable<T[keyof T]> {\n    return this.on('child_added')\n  }\n\n  onChildChanged(): DataSnapshotObservable<T[keyof T]> {\n    return this.on('child_changed')\n  }\n\n  onChildMoved(): DataSnapshotObservable<T[keyof T]> {\n    return this.on('child_moved')\n  }\n\n  onChildRemoved(): DataSnapshotObservable<T[keyof T]> {\n    return this.on('child_removed')\n  }\n\n  isEqual(query: FirebaseQuery<any>): boolean {\n    return this.getQueryOrRef().isEqual(query.getQueryOrRef())\n  }\n\n  private _once(event: string): Observable<DataSnapshot<T>> {\n    return map.call(\n      this.app.zoneHelper.wrapPromise(() => this.getQueryOrRef().once(event)),\n      (nativeSnapshot: any) => this.makeDataSnapshot(nativeSnapshot)\n    )\n  }\n\n  private _on(event: string): Observable<DataSnapshot<T>> {\n    return this.app.zoneHelper.createObservable(sub => {\n      const cb = this.getQueryOrRef().on(\n        event, this.getEventHandler(sub),\n        (err: any) => sub.error(err)\n      )\n\n      return () => this.getQueryOrRef().off(event, cb)\n    })\n  }\n\n  protected makeDataSnapshot(snapshot: any, prevKey?: string) {\n    if (typeof prevKey !== 'undefined') {\n      snapshot.prevKey = prevKey\n    }\n    Object.defineProperty(snapshot, 'ref', {\n      get: () => this\n    })\n    return snapshot\n  }\n\n  private getEventHandler(sub: Subscriber<any>, complete?: boolean) {\n    return (snapshot: any, prevKey: any) => {\n      sub.next(this.makeDataSnapshot(snapshot, prevKey))\n      if (complete) {\n        sub.complete()\n      }\n    }\n  }\n\n  private getQueryOrRef() {\n    if (this.query) {\n      return this.query\n    }\n    return this._ref\n  }\n\n  private _call(fnName: string, ...args: any[]) {\n    this.app.zoneHelper.runInFirebase(() => {\n      if (this.query) {\n        this.query = (this.query as any)[fnName](...args)\n      }\n      else {\n        this.query = (this._ref as any)[fnName](...args)\n      }\n    })\n  }\n}\n\nexport class FirebaseDatabaseRef<T> extends FirebaseQuery<T> {\n\n  get key(): string | null {\n    return this._ref.key\n  }\n\n  constructor(public parent: FirebaseDatabaseRef<any> | null,\n              ref: NativeDatabaseRef,\n              app: FirebaseApp) {\n    super(ref, app)\n\n    this.wrappedRef = this\n  }\n\n  child<P extends keyof T>(path: P): FirebaseDatabaseRef<T[P]> {\n    return new FirebaseDatabaseRef<T[P]>(this, this._ref.child(path), this.app)\n  }\n\n  set(value: T): Observable<void> {\n    return this.app.zoneHelper.wrapPromise<void>(() => this._ref.set(value))\n  }\n\n  setPriority(priority: Priority): Observable<void> {\n    // There seems to be a bug with the typing for #setPriority(priority, onComplete): Promise\n    // The firebase library, in every other case, declares the onComplete function optional since a\n    // Promise is returned as well.\n    return this.app.zoneHelper.wrapPromise<void>(() => (this._ref as any).setPriority(priority))\n  }\n\n  setWithPriority(newVal: T, priority: Priority): Observable<void> {\n    return this.app.zoneHelper.wrapPromise<void>(() => this._ref.setWithPriority(newVal, priority))\n  }\n\n  push<P extends T[keyof T]>(value?: P): Observable<FirebaseDatabaseRef<P>> {\n    const pushRef = this._ref.push(value)\n    const ref     = new FirebaseDatabaseRef<P>(this, pushRef, this.app)\n\n    // Only if a value to push was given, use ref as promise, since otherwise\n    // pushRef.then will be undefined\n    if (value) {\n      return mapTo.call(this.app.zoneHelper.wrapPromise<FirebaseDatabaseRef<P>>(() => pushRef), ref)\n    }\n    return of(ref)\n  }\n\n  update(value: T): Observable<void> {\n    return this.app.zoneHelper.wrapPromise<void>(() => this._ref.update(value))\n  }\n\n  remove(): Observable<void> {\n    return this.app.zoneHelper.wrapPromise<void>(() => this._ref.remove())\n  }\n\n  transaction(transactionHandler: (node: T | null) => T | null | never,\n              applyLocally?: boolean): Observable<TransactionResult<T>> {\n    if (Zone) {\n      transactionHandler = this.app.zoneHelper.wrap(transactionHandler, 'firebaseRxJS.transaction')\n    }\n    return this.app.zoneHelper.wrapPromise<TransactionResult<T>>(\n      () => new Promise((resolve, reject) => this._ref.transaction(\n        transactionHandler,\n        (err, committed, snapshot: any) => {\n          return err ? reject(err) : resolve({\n            committed,\n            snapshot: this.makeDataSnapshot(snapshot)\n          })\n        },\n        applyLocally\n      ))\n    )\n  }\n}\n\n/**\n * A special object with information about the connection between client and server which can be\n * accessed by using `db.ref('.info')`.\n */\nexport class InfoSchema {\n  /**\n   * Whether or not the client is connected to the server.\n   */\n  connected: boolean\n  /**\n   * The estimated offset of time in milliseconds between client and server.\n   */\n  serverTimeOffset: number\n}\n\nexport class FirebaseDatabase<T> {\n\n  /**\n   * A collection of special constants which can be used when writing data. Their values will be\n   * substituted on the server with server generated values.\n   * E.g {@link FirebaseDatabase.ServerValue.TIMESTAMP} will be substituted for the server time\n   * when committing a write.\n   */\n  static ServerValue = database.ServerValue\n\n  constructor(private db: NativeFirebaseDatabase, private app: FirebaseApp) { }\n\n  /**\n   * Get a {@link FirebaseDatabaseRef} to a location in the database.\n   *\n   * @howToUse\n   * If you have defined a database schema you should use {@link FirebaseDatabase.ref} without\n   * specifying a path in the database. At least not without giving a type parameter for the data\n   * at that location. When using a schema you get the benefit of correct typing when using\n   * {@link FirebaseDatabaseRef.child}. The TypeScript compiler can infer from the path segments\n   * given to {@link FirebaseDatabaseRef.child} whether the path segment is valid at this\n   * location in the database and what the type of the data is that will be returned when\n   * fetching it.\n   */\n  ref(): FirebaseDatabaseRef<T>\n  ref(path: '.info'): FirebaseDatabaseRef<InfoSchema>\n  ref(path: string): FirebaseDatabaseRef<any>\n  ref<F>(path: string): FirebaseDatabaseRef<F>\n  ref<F>(path?: string): FirebaseDatabaseRef<F> {\n    return new FirebaseDatabaseRef(null, this.db.ref(path), this.app)\n  }\n}\n"]}