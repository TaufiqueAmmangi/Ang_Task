{"version":3,"sources":["../../../../packages/firebase-rxjs/src/app.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAA;AAEpC,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAA;AACrC,OAAO,EAAE,gBAAgB,EAAE,MAAM,YAAY,CAAA;AAE7C,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAA;AAG1C,IAAI,SAAS,GAAG,CAAC,CAAA;AAEjB;IASE,qBAAmB,MAAyB,EAAE,EAA6B;YAA3B,qDAAY;QAAzC,WAAM,GAAN,MAAM,CAAmB;QAC1C,MAAM,CAAC,IAAI,GAAO,MAAM,CAAC,IAAI,IAAI,SAAO,SAAS,EAAI,CAAA;QACrD,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,YAAY,CAAC,CAAA;QAC9C,IAAI,CAAC,SAAS,GAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;YAC9C,OAAA,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,CAAC;QAAnD,CAAmD,CAAC,CAAA;IACxD,CAAC;IAED,4BAAM,GAAN;QAAA,iBAEC;QADC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,cAAM,OAAA,KAAI,CAAC,SAAS,CAAC,MAAM,EAAE,EAAvB,CAAuB,CAAC,CAAA;IACnE,CAAC;IAED;;OAEG;IACH,0BAAI,GAAJ;QAAA,iBAMC;QALC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,KAAK;gBACR,IAAI,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,cAAM,OAAA,KAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAArB,CAAqB,CAAC,EAAE,IAAI,CAAC,CAAA;QACtF,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAA;IACnB,CAAC;IAED;;;;;OAKG;IACH,8BAAQ,GAAR;QAAA,iBAMC;QALC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS;gBACZ,IAAI,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,cAAM,OAAA,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,EAAzB,CAAyB,CAAC,EAAE,IAAI,CAAC,CAAA;QAC9F,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAA;IACvB,CAAC;IACH,kBAAC;AAAD,CA5CA,AA4CC,IAAA","file":"app.js","sourceRoot":"","sourcesContent":["import * as firebase from 'firebase'\nimport { Observable } from 'rxjs/Observable'\nimport { FirebaseAuth } from './auth'\nimport { FirebaseDatabase } from './database'\nimport { NativeFirebaseApp } from './native-firebase'\nimport { ZoneHelper } from './zone-helper'\nimport { Extras, FirebaseAppConfig } from './interfaces'\n\nlet lastAppId = 0\n\nexport class FirebaseApp {\n  nativeApp: NativeFirebaseApp\n\n  private _auth: FirebaseAuth\n  private _database: FirebaseDatabase<any>\n\n  /** @internal */\n  zoneHelper: ZoneHelper\n\n  constructor(public config: FirebaseAppConfig, { firebaseZone }: Extras = {}) {\n    config.name     = config.name || `app-${lastAppId++}`\n    this.zoneHelper = new ZoneHelper(firebaseZone)\n    this.nativeApp  = this.zoneHelper.runInFirebase(() =>\n      firebase.initializeApp(config.options, config.name))\n  }\n\n  delete(): Observable<void> {\n    return this.zoneHelper.wrapPromise(() => this.nativeApp.delete())\n  }\n\n  /**\n   * Get the with this {@link FirebaseApp} associated {@link FirebaseAuth} instance.\n   */\n  auth(): FirebaseAuth {\n    if (!this._auth) {\n      this._auth =\n        new FirebaseAuth(this.zoneHelper.runInFirebase(() => this.nativeApp.auth()), this)\n    }\n    return this._auth\n  }\n\n  /**\n   * Get the with this {@link FirebaseApp} associated {@link FirebaseDatabase}.\n   *\n   * The type parameter T is used to supply the schema of your database. If you do not want to\n   * use one set it to `any`. Using a schema provides type safety when accessing the database.\n   */\n  database<T>(): FirebaseDatabase<T> {\n    if (!this._database) {\n      this._database =\n        new FirebaseDatabase(this.zoneHelper.runInFirebase(() => this.nativeApp.database()), this)\n    }\n    return this._database\n  }\n}"]}